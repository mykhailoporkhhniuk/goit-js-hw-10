{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst btnEl = document.querySelector('button');\nbtnEl.setAttribute('disabled', '');\n\nlet userSelectedDate = '';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= Date.now()) {\n        iziToast.show({\n          title: '',\n          message: 'Please choose a date in the future',\n          color: 'red',\n          position: 'topRight',\n        });\n        btnEl.setAttribute('disabled', '');\n      } else {\n      btnEl.removeAttribute('disabled');\n      }\n      \n  },\n};\n\nflatpickr('#datetime-picker', options);\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst spanEl = document.querySelectorAll('.value');\nconst inputEl = document.querySelector('#datetime-picker')\n\nlet intervalId = 0;\n\n\nbtnEl.addEventListener('click', () => {\n  btnEl.setAttribute('disabled', '');\n  inputEl.setAttribute('disabled', '');\n  \n  intervalId = setInterval(() => {\n    const ms = userSelectedDate - Date.now();\n    const time = Object.values(convertMs(ms));\n    let n = 0;\n    for (const i of spanEl) {\n      i.textContent = time[n].toString().padStart(2, '0');\n      n += 1;\n    }\n  }, 1000);\n\n  setTimeout(() => {\n    clearInterval(intervalId);\n    inputEl.removeAttribute('disabled');\n  }, userSelectedDate - Date.now());\n})\n\n\n\n"],"names":["btnEl","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","spanEl","inputEl","intervalId","time","i"],"mappings":"2GAMA,MAAMA,EAAQ,SAAS,cAAc,QAAQ,EAC7CA,EAAM,aAAa,WAAY,EAAE,EAEjC,IAAIC,EAAmB,GAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBF,EAAmBE,EAAc,CAAC,EAChCF,GAAoB,KAAK,OACzBG,EAAS,KAAK,CACZ,MAAO,GACP,QAAS,qCACT,MAAO,MACP,SAAU,UACpB,CAAS,EACDJ,EAAM,aAAa,WAAY,EAAE,GAEnCA,EAAM,gBAAgB,UAAU,CAGnC,CACH,EAEAK,EAAU,mBAAoBH,CAAO,EAGrC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAS,SAAS,iBAAiB,QAAQ,EAC3CC,EAAU,SAAS,cAAc,kBAAkB,EAEzD,IAAIC,EAAa,EAGjBd,EAAM,iBAAiB,QAAS,IAAM,CACpCA,EAAM,aAAa,WAAY,EAAE,EACjCa,EAAQ,aAAa,WAAY,EAAE,EAEnCC,EAAa,YAAY,IAAM,CAC7B,MAAMP,EAAKN,EAAmB,KAAK,IAAG,EAChCc,EAAO,OAAO,OAAOT,EAAUC,CAAE,CAAC,EACxC,IAAI,EAAI,EACR,UAAWS,KAAKJ,EACdI,EAAE,YAAcD,EAAK,CAAC,EAAE,SAAQ,EAAG,SAAS,EAAG,GAAG,EAClD,GAAK,CAER,EAAE,GAAI,EAEP,WAAW,IAAM,CACf,cAAcD,CAAU,EACxBD,EAAQ,gBAAgB,UAAU,CACnC,EAAEZ,EAAmB,KAAK,IAAG,CAAE,CAClC,CAAC"}